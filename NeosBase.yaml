########################
# Init runtime data
########################
'Set project data':
  class: \Butler\Task\InputTask
  task: question
  options:
    projectname: 'What is the name of your Project?'

########################
# Init project with composer
########################
'Composer create':
  class: \Butler\Task\ComposerTask
  task: create
  options:
    distribution: neos/neos-base-distribution
    tempPath: temp
    params:
      - '--no-dev'

'Neos kickstart site':
  class: \Butler\Task\NeosTask
  task: kickstartSite
  options:
    context: Development
    #package-key: '{projectvendor}.Site'
    site-name: '{projectname}'

'Composer remove packages':
  class: \Butler\Task\ComposerTask
  task: remove
  options:
    packages: neos/demo neos/site-kickstarter neos/setup flowpack/neos-frontendlogin neos/redirecthandler-neosadapter neos/redirecthandler-databasestorage neos/nodetypes neos/seo

'Composer.json update':
  class: \Butler\Task\JsonTask
  task: update
  options:
    filename: composer.json
    data:
      repositories:
        - type: "path"
          url: "./DistributionPackages/*"
      config:
        platform:
          php: "7.0"
      scripts:
        neosguidelines: "./flow guidelines:validateDistribution && ./flow guidelines:validatePackages"
        'lint:editorconfig': "editorconfig-checker -e 'Public|Resources|Sites.xml' ./DistributionPackages/*"
        'lint:psr2': "./bin/phpcs ./DistributionPackages/ --standard=PSR2 --standard=PSR2 --extensions=php"
        lint: "composer lint:editorconfig && composer lint:psr2 && composer neosguidelines"
        test:
          - "bin/phpunit -c Build/BuildEssentials/PhpUnit/UnitTests.xml DistributionPackages/{neos.site-package.key}/Tests/Unit/"

'Move Sitepackage':
  class: \Butler\Task\FilesystemTask
  task: move
  options:
    originDir: './Packages/Sites/{neos.site-package.key}'
    targetDir: './DistributionPackages/{neos.site-package.key}'

'Composer update':
  class: \Butler\Task\ComposerTask
  task: update

'Composer require':
  class: \Butler\Task\ComposerTask
  task: add
  options:
    package: '{neos.site-package.composer-name}:dev-master sitegeist/monocle'

'Composer require-dev':
  class: \Butler\Task\ComposerTask
  task: add
  options:
    package: 'sitegeist/magicwand sitegeist/neosguidelines editorconfig-checker/editorconfig-checker squizlabs/php_codesniffer'
    params:
      - '--dev'

###################
# Create settings
###################

'Neos dev settings':
  class: \Butler\Task\NeosTask
  task: settings
  options:
    filename: Configuration/Development/Settings.yaml
    settings:
      Neos:
        Flow:
          persistence:
            backendOptions:
              dbname: application
              user: toor
              password: toor
              host: 0.0.0.0
              port: 8086

'Neos global settings':
  class: \Butler\Task\FilesystemTask
  task: copy
  options:
    originFile: Configuration/Settings.yaml.example
    targetFile: Configuration/Settings.yaml

######################
# Docker setup and run
######################

# ToDo: use yaml task instead of the neos settings task.
'Docker create docker-compose.yml':
  class: \Butler\Task\NeosTask
  task: settings
  options:
    filename: docker-compose.yml
    settings:
      version: '2'
      services:
        db:
          image: 'mysql:5.7'
          volumes:
            - './Data/Docker/Database:/var/lib/mysql'
          restart: always
          ports:
            - '8086:3306'
          command:
            - '--character-set-server=utf8'
            - '--collation-server=utf8_unicode_ci'
          environment:
            MYSQL_ROOT_PASSWORD: toor
            MYSQL_DATABASE: application
            MYSQL_USER: toor
            MYSQL_PASSWORD: toor
        phpmyadmin:
          image: phpmyadmin/phpmyadmin
          environment:
            - PMA_HOST=db
            - PMA_PORT=3306
            - PMA_USER=toor
            - PMA_PASSWORD=toor
          restart: always
          ports:
            - '8082:80'
          volumes:
            - /sessions

'Docker docker-compose up':
  class: \Butler\Task\CommandTask
  task: command
  options:
    command: 'docker-compose up -d'

'Docker waiting for database':
  class: \Butler\Task\CommandTask
  task: command
  options:
    command: 'while ! mysqladmin ping -h0.0.0.0 --port=8086 --silent; do sleep 1 ;done'

#########################
# Neos Setup
#########################

'Neos migrate database':
  class: \Butler\Task\NeosTask
  task: doctrineMigrate
  options:
    context: Development

# user just for local development
'Neos create admin':
  class: \Butler\Task\NeosTask
  task: createUser
  options:
    context: Development
    #user: admin
    #password: admin
    username: 'Admin Admin'
    roles:
      - 'Neos.Neos:Administrator'

#'Neos import demo':
#  class: \Butler\Task\NeosTask
#  task: siteImport
#  options:
#    context: Development
#    package: Neos.Demo

'Neos create site':
  class: \Butler\Task\NeosTask
  task: siteCreate
  options:
    context: Development
    package-key: '{neos.site-package.key}'
    site-name: '{neos.site-package.name}'

'Docker compose down':
  class: \Butler\Task\CommandTask
  task: command
  options:
    command: 'docker-compose down'

#####################
# Create common files
#####################

'Create README':
  class: \Butler\Task\FilesystemTask
  task: dumpFile
  options:
    file: README.md
    content:
      - '# {projectname}'
      - ''
      - '## Installation'
      - ''
      - '## Versioning'
      - ''
      - '## Deployment'

######################
# init Git
######################

'Git init':
  class: \Butler\Task\GitTask
  task: init
  options: {  }

'Git ignoreEdit':
  class: \Butler\Task\GitTask
  task: ignoreEdit
  options:
    replaces:
      /Configuration/: '/Configuration/*'

'Git ignore':
  class: \Butler\Task\GitTask
  task: ignore
  options:
    files:
      - 'Build/*'
      - 'Readme.rst'
      - 'Upgrading.rst'
      - '.idea'

'Git add':
  class: \Butler\Task\GitTask
  task: add
  options:
    files:
      - '.'
      - .gitignore
      - .editorconfig

'Git commit':
  class: \Butler\Task\GitTask
  task: commit
  options:
    message: 'initial commit'

'Git add remote':
  class: \Butler\Task\GitTask
  task: remoteAdd
  options:
    origin: origin
    #url: 'git@github.com:vendor/projectname.git'

'Git ask push':
  class: \Butler\Task\InputTask
  task: confirmation
  options:
    gitpush: 'Execute git push now?'

'Git push':
  class: \Butler\Task\GitTask
  task: push
  options:
    params:
      - '-u'
    origin: origin
    branch: master
  condition: 'gitpush == 1'

#######################
# Finished
#######################

'The End :)':
  class: \Butler\Task\InputTask
  task: writelines
  options:
    header: Finished
    text: 'Your new project "{projectname}" is now redeady for development'
    hodor: ''
    0: 'To start local development run:'
    1: 'docker-compose up -d && ./flow server:run'
    2: '-----------------------------------------'
    3: 'Linting: composer run lint'
    4: 'Testing: composer run test'
